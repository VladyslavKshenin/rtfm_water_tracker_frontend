{"version":3,"file":"static/js/368.bf2be497.chunk.js","mappings":"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","sources":["components/AuthForm/SignUpAuthForm.jsx","components/pages/SignupPage/SignupPage.jsx"],"sourcesContent":["import { useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from \"@hookform/resolvers/yup\"\nimport { registerSchema } from './validation';\nimport { ReactComponent as Eye } from 'images/eye.svg';\nimport { ReactComponent as EyeSlash } from 'images/eye-slash.svg';\nimport css from './AuthForm.module.css'\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Notify } from \"notiflix\"\nimport { registeration } from 'store/auth/authOperations';\n\nconst SignUpAuthForm = () => {\n  const [flagWatch, setFlagWatch] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { register, formState: { errors }, handleSubmit, reset } = useForm({\n    resolver: yupResolver(registerSchema)\n  });\n\n  const onSubmit = (data) => {\n\n    if (data.password !== data.passwordRepeat) {\n          Notify.failure('Паролі не співпадають');\n          return;\n        }\n\n    dispatch(\n      registeration({\n      email: data.email, \n      password: data.password\n    }))\n      .unwrap()\n      .then(() => {\n        Notify.success('Registered successfully!');\n        reset()\n        navigate('/signin');\n      })\n      .catch((err) => {\n        Notify.failure(('Такий email вже використовується'))\n      })  \n    }\n\n  return (\n    <form action=\"register\" autoComplete=\"off\" className={css.form} onSubmit={handleSubmit(onSubmit)}>\n      <h1 className={css.title}>Sign Up</h1>\n      <label htmlFor=\"email\" className={css.description}>Enter your email</label>\n      <input id=\"email\" className={errors?.email ? css.input + \" \" + css.inputError : css.input}\n          placeholder='E-mail...'\n          {...register('email')}/>\n      <div className={css.error}>\n        {errors?.email && <p>{ errors?.email.message || \"Errors!\" }</p>}\n      </div>\n\n      <label htmlFor=\"password\" className={css.description}>Enter your password</label>\n      <div className={css.svg_input_password}>\n        {flagWatch ? \n            <span className={css.icon} onClick={() => {setFlagWatch(!flagWatch)}}><Eye /></span> \n          : \n          <span onClick={() => {setFlagWatch(!flagWatch)}} className={css.icon}><EyeSlash /></span> }\n      <input id=\"password\" \n        className={errors?.password ? css.input + \" \" + css.inputError : css.input}\n        placeholder=\"Password\" \n        type={flagWatch ? 'text' : 'password'}\n        {...register(\"password\")}/>\n      </div>\n      <div className={css.error}>\n        {errors?.password && <p>{ errors?.password.message || \"Errors!\" }</p>}\n      </div>\n\n      <label htmlFor=\"password\" className={css.description}>Repeat password</label>\n      <div className={css.svg_input_password}>\n        {flagWatch ? \n            <span className={css.icon} onClick={() => {setFlagWatch(!flagWatch)}}><Eye /></span> \n          : \n          <span onClick={() => {setFlagWatch(!flagWatch)}} className={css.icon}><EyeSlash /></span> }\n      <input id=\"password\" \n        className={errors?.password ? css.input + \" \" + css.inputError : css.input}\n        placeholder='Repeat password' \n        type={flagWatch ? 'text' : 'password'}\n        {...register(\"passwordRepeat\")}/>\n      </div>\n      <div className={css.error}>\n        {errors?.password && <p>{ errors?.password.message || \"Errors!\" }</p>}\n      </div>\n\n      <button type=\"submit\" className={css.button}>Sign Up</button>\n\n      <Link className={css.sign}to=\"/signin\">Sign In</Link> \n             \n    </form>\n  )\n}\n\nexport default SignUpAuthForm\n\n\n            // <form className={css.form} onSubmit={handleSubmit} autoComplete=\"on\">\n          //     <h1 className={css.title}>Sign In</h1>\n          //     <p className={css.description}>Enter your email</p>\n          // <label>\n          //   <input placeholder='E-mail' className={css.input} type=\"email\" name=\"email\" onChange={handleChange} value={logEmail}/>\n          //     </label>\n//               <p className={css.description}>Enter your password</p>\n//           <label className={css.form_label}>\n//             <input placeholder='Password' className={css.input}  type={flagWatch ? 'text' : 'password'} name=\"password\" onChange={handleChange} value={logPassword} />\n//             <div\n//               onClick={() => {\n//                 setFlagWatch(!flagWatch);\n//               }}\n//               className={css.svg_input_password}\n//             >\n//               {flagWatch ? <Eye /> : <EyeSlash />}\n//             </div>\n//           </label>\n//           <button className={css.button} type=\"submit\">\n//             Sign In\n//               </button>\n//               <p className={css.sign}>\n//           <Link to=\"/signup\">Sign Up</Link>\n//         </p>\n//         </form>","import css from '../SigninPage/SigninPage.module.css';\nimport SignUpAuthForm from 'components/AuthForm/SignUpAuthForm';\n\nconst SignupPage = () => {\n \n  return (\n    <section className=\"signMain\">\n      <div className=\"signSection\">\n        <div className=\"container\">\n          <div className={css.contPosition}>\n            <SignUpAuthForm/>\n          </div>\n        </div>\n      </div>\n    </section>\n    \n  );\n};\n\nexport default SignupPage;\n\n\n"],"names":["_useState","useState","_useState2","_slicedToArray","flagWatch","setFlagWatch","dispatch","useDispatch","navigate","useNavigate","_useForm","useForm","resolver","yupResolver","registerSchema","register","errors","formState","handleSubmit","reset","_jsxs","action","autoComplete","className","css","onSubmit","data","password","passwordRepeat","registeration","email","unwrap","then","Notify","catch","err","children","_jsx","htmlFor","_objectSpread","id","placeholder","message","onClick","Eye","EyeSlash","type","Link","to","SignUpAuthForm"],"sourceRoot":""}