{"version":3,"file":"static/js/565.6cd0dc08.chunk.js","mappings":"6NAqEA,UA5DmB,WAEjB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAAmCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAWF,EAAA,GAACG,EAAcH,EAAA,GACjCI,GAA6BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAQD,EAAA,GAACE,EAAWF,EAAA,GACrBG,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,QAAQC,IAAIJ,GACZ,IAcMK,EAAe,SAACC,GACpB,IAAAC,EAAmBD,EAAEE,cAAdC,EAAIF,EAAJE,KAAKC,EAAKH,EAALG,MAEF,UAAPD,EACHV,EAAYW,GAGVf,EAAee,EAEnB,EAEA,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YAEJF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMI,SA9BS,SAAAT,GACnBA,EAAEU,iBACF,IAAMC,EAAOX,EAAEE,cACfpB,GACE8B,EAAAA,EAAAA,IAAM,CACJC,MAAOF,EAAKG,SAASD,MAAMT,MAC3BW,SAAUJ,EAAKG,SAASC,SAASX,SAG1B,OAARV,IACHD,EAAY,IACZJ,EAAe,IAEjB,EAiBoC2B,aAAa,MAAKT,SAAA,EAC9CF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,WAELC,EAAAA,EAAAA,KAAA,SAAOS,KAAK,QAAQd,KAAK,QAAQe,SAAUnB,EAAcK,MAAOZ,QAElEa,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,aAELC,EAAAA,EAAAA,KAAA,SAAOS,KAAK,WAAWd,KAAK,WAAWe,SAAUnB,EAAcK,MAAOhB,QAExEoB,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAAQV,SAAC,gBAKxBC,EAAAA,EAAAA,KAAA,KAAAD,UACEC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,UAASb,SAAC,mBAM7B,C,uDCnEO,IAMMX,EAAc,SAAAyB,GAAK,OAAIA,EAAMC,KAAK5B,KAAM,C","sources":["components/pages/SigninPage/SigninPage.jsx","store/auth/authSelectors.js"],"sourcesContent":["// import AuthForm from 'components/AuthForm/AuthForm'\nimport { useDispatch ,useSelector} from 'react-redux';\nimport { logIn } from '../../../store/auth/authOperations';\nimport { Link } from 'react-router-dom';\n\nimport { useState } from 'react';\n\nimport { selectError } from 'store/auth/authSelectors';\n\nconst SigninPage = () => {\n\n  const dispatch = useDispatch();\n  const [logPassword,setLogPassword]=useState('');\n  const [logEmail,setLogEmail]=useState('');\n  const error = useSelector(selectError);\n  console.log(error);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const Form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: Form.elements.email.value,\n        password: Form.elements.password.value,\n      })\n    );\n    if(error===null){\n    setLogEmail('')\n    setLogPassword('')\n    }\n  };\n  const handleChange = (e)=>{\n    const {name,value}=e.currentTarget;\n\n    if(name==='email'){\n    setLogEmail(value)\n  }\n    else {\n      setLogPassword(value)\n    }\n  }\n\n  return (\n    <>\n      <h1>Log In</h1>\n\n      <div>\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <label>\n            E-mail:\n            <input type=\"email\" name=\"email\" onChange={handleChange} value={logEmail}/>\n          </label>\n          <label>\n            Password:\n            <input type=\"password\" name=\"password\" onChange={handleChange} value={logPassword} />\n          </label>\n          <button type=\"submit\">\n            Sign In\n          </button>\n        </form>\n\n        <p>\n          <Link to=\"/signup\">Sign Up</Link>\n        </p>\n      </div>\n    </>\n    // <AuthForm/>\n  )\n}\n\nexport default SigninPage","export const selectUser = state => state.auth.user;\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n\nexport const selectError = state => state.auth.error;"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","logPassword","setLogPassword","_useState3","_useState4","logEmail","setLogEmail","error","useSelector","selectError","console","log","handleChange","e","_e$currentTarget","currentTarget","name","value","_jsxs","_Fragment","children","_jsx","onSubmit","preventDefault","Form","logIn","email","elements","password","autoComplete","type","onChange","Link","to","state","auth"],"sourceRoot":""}