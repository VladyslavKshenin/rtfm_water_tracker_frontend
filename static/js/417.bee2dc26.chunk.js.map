{"version":3,"file":"static/js/417.bee2dc26.chunk.js","mappings":"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","sources":["components/DailyNormalModalForm/DailyNormalModalForm.jsx","components/DailyNormaModal/DailyNormaModal.jsx","store/modal/modalSelector.js","webpack://rtfm_water_tracker_frontend/./src/components/DailyNorma/DailyNorma.module.css?8e40","components/DailyNorma/DailyNorma.jsx","components/AddWaterModal/AddWaterModal.jsx","webpack://rtfm_water_tracker_frontend/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/WaterProgress/WaterProgress.jsx","components/pages/HomePage/HomePage.jsx"],"sourcesContent":["// import { useDispatch } from \"react-redux\"\n// import { showModal } from \"store/modal/modalSlice\"\n// import css from \"./DailyNormalModalForm.module.css\"\n\n//  import { useForm } from \"react-hook-form\";\n\nimport { useState } from 'react'\n\nconst DailyNormalModalForm = () => {\n  const [gender, setGender] = useState('')\n  const [weight, setWeight] = useState('')\n  const [time, setTime]= useState('')\n  const [waterRate, setWaterRate] = useState('')\n\n  const handlerChange = ({ target: { value, name } }) => {\n    switch (name) {\n      case 'gender': setGender(value)\n        break;\n      \n      case 'weight': setWeight(value)\n        break;\n\n      case 'time': setTime(value)\n        break;\n      \n      case 'waterRate': setWaterRate(value)\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  console.log('gender', gender)\n  console.log('weight', weight)\n  console.log('time', time)\n  console.log('waterRate', waterRate)\n\n//     let waterCalculation\n//     switch (gender) {\n//       case 'female': waterCalculation = weight*0.03 + time*0.4\n//         break;\n\n//       default:\n//         waterCalculation = weight*0.03 + time*0.4\n//         return\n// }\n// console.log('first', waterCalculation)\n\n  const handleSubmit =()=>{\n\n  }\n  return (\n    <form action=\"Water rate\" onSubmit={handleSubmit}>\n      <h2>Calculate your rate</h2>\n           <label htmlFor=\"gender\">\n             <input\n                type=\"radio\" \n                id=\"gender\"\n                value=\"female\"\n                name=\"gender\"\n                onChange={handlerChange}/>\n            For woman\n          </label>\n          <label htmlFor=\"gender\">\n            <input \n                type=\"radio\" \n                id=\"gender\"\n                value=\"male\" \n                name=\"gender\"\n                onChange={handlerChange}/>\n            For man\n          </label>\n    \n          <label htmlFor=\"weight\">\n            Your weight in kilograms:\n            <input \n                type=\"text\"\n                id=\"weight\"\n                placeholder=\"0\"\n                name=\"weight\"\n                value={weight}\n                onChange={handlerChange}/>\n          </label>\n    \n          <label htmlFor=\"time\">\n            The time of active participation in sports or other activities with a high physical. Load in hours:\n            <input \n                type=\"text\"\n                id=\"time\"\n                placeholder=\"0\"\n                value={time}\n                name=\"time\"\n                onChange={handlerChange}/>\n          </label>\n          \n          <p htmlFor=\"\">The required amount of water in liters per day:</p>\n          <p></p>\n\n          <label htmlFor=\"water\">Write down how much water you will drink:</label>\n          <input type=\"text\" name=\"waterRate\" id=\"water \" value={waterRate} onChange={handlerChange}/>\n\n        <button type=\"submit\">Save</button>\n        </form>\n  )\n}\n\nexport default DailyNormalModalForm\n\n\n\n// const DailyNormalModalForm = () => {\n\n//   // const dispatch = useDispatch()\n   \n//     const { register, handleSubmit } = useForm({\n//       defaultValues: {\n//         gender: 'female',\n//         weight: '',\n//         time: ''\n//       },  \n//       mode: \"onChange\"\n//     });\n\n//     const onSubmit =(data) => {\n//       console.log('data', data)\n//       alert(JSON.stringify(data))\n//     }\n\n\n//   return (\n//     <form action=\"Water rate\" onSubmit={handleSubmit(onSubmit)}>\n//       <h2>Calculate your rate</h2>\n\n//       <label htmlFor=\"gender\">\n//         <input \n//             type=\"radio\" \n//             id=\"gender\"\n//             value=\"female\" \n//             {...register(\"gender\")}/>\n//         For woman\n//       </label>\n//       <label htmlFor=\"gender\">\n//         <input \n//             type=\"radio\" \n//             id=\"gender\"\n//             value=\"male\" \n//             {...register(\"gender\")}/>\n//         For man\n//       </label>\n\n//       <label htmlFor=\"weight\">\n//         Your weight in kilograms:\n//         <input \n//             type=\"text\"\n//             id=\"weight\"\n//             placeholder=\"0\"\n//             {...register(\"weight\", {\n//               min: {\n//                 value: 0,\n//                 message: \"Body weight cannot be a negative value.\"\n//               }\n//             })}/>\n//       </label>\n\n//       <label htmlFor=\"time\">\n//         The time of active participation in sports or other activities with a high physical. Load in hours:\n//         <input \n//             type=\"text\"\n//             id=\"time\"\n//             placeholder=\"0\"\n//             {...register(\"time\")}/>\n//       </label>\n      \n//     <button type=\"submit\">Save</button>\n//     </form>\n//   )\n// }\n\n// export default DailyNormalModalForm\n","import { useDispatch } from 'react-redux'\nimport { showModal } from 'store/modal/modalSlice'\n\nimport DailyNormalModalForm from '../DailyNormalModalForm/DailyNormalModalForm'\nimport { Svg } from 'components/Icons/Icons'\n\nconst DailyNormaModal = () => {\n\n    const dispatch = useDispatch()\n\n    const handleClick = (e) =>{\n        console.log('e.currentTarget', e)\n        dispatch(showModal())\n    }\n  return (\n    <>\n        <h2>My daily norma</h2>\n        <button type=\"button\" onClick={()=>{handleClick()}}>\n            <Svg id={\"#close\"} width={24} height={24}/>\n        </button>\n        <ul>\n            <li>\n                <p>For girl: <span>V=(M*0,03) + (T*0,4)</span></p>\n            </li>\n            <li>\n                <p>For man: <span>V=(M*0,04) + (T*0,6)</span></p>\n            </li>\n        </ul>\n        <p>\n            * V is the volume of the water norm in liters per day, M is your body weight, T is the time of active sports, or another type of activity commensurate in terms of loads (in the absence of these, you must set 0)\n        </p>\n        <DailyNormalModalForm/>\n    </>\n  )\n}\n\nexport default DailyNormaModal","export const showModalSelector = (state) => state.modal.showModal\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"DailyNorma_wrap__TRK0S\",\"title\":\"DailyNorma_title__X4SZH\",\"wrapper\":\"DailyNorma_wrapper__dU6co\",\"description\":\"DailyNorma_description__cZ1AR\",\"btn\":\"DailyNorma_btn__Zr65u\"};","import DailyNormaModal from \"components/DailyNormaModal/DailyNormaModal\"\n// import Modal from \"components/Modal/Modal\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { showModalSelector } from \"store/modal/modalSelector\"\nimport { showModal } from \"store/modal/modalSlice\"\nimport css from \"./DailyNorma.module.css\"\n\nexport const DailyNorma = () => {\n\n    const showDaily = useSelector(showModalSelector)\n    const dispatch = useDispatch()\n    \n  return (\n    <div className={css.wrap}>\n        <h3 className={css.title}>My daily norma</h3>\n        <div className={css.wrapper}>\n            <p className={css.description}><strong>2 L</strong></p>\n            <button type=\"button\" className={css.btn} onClick={()=>{dispatch(showModal())}}>\n              Edit\n            </button>\n        </div>\n        {showDaily ? \n                // <Modal>\n                  <DailyNormaModal/>\n                // </Modal>\n              : null}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { waterSelector } from '../../store/water/waterSelector';\nimport { addWaterThunk } from '../../store/water/waterThunk';\nimport { Svg } from 'components/Icons/Icons';\n\nexport const AddWaterModal = ({ closeModal }) => {\n  // const dose = useSelector(waterSelector);\n  const dispatch = useDispatch();\n  const [waterDose, setWaterDose] = useState(0);\n  const [inputWaterDose, setInputWaterDose] = useState('');\n  const [time, setTime] = useState(currentTime());\n\n  function currentTime() {\n    const now = new Date();\n    const hours = String(now.getHours());\n    const minutes = String(now.getMinutes()).padStart(2, '0');\n\n    return `${hours}:${minutes}`;\n  }\n\n  const decreaseDose = () => {\n    setWaterDose(prev => Math.max(prev - 50, 0));\n  };\n  const increaseDose = () => {\n    setWaterDose(prev => prev + 50);\n  };\n\n  const handleTime = event => {\n    setTime(event.target.value);\n  };\n\n  const handleInputWaterDoseChange = event => {\n    setInputWaterDose(event.target.value);\n  };\n\n  const handleInputWaterDoseBlur = () => {\n    let newWaterDose = Math.round(Number(inputWaterDose) / 50) * 50;\n    setWaterDose(Number(inputWaterDose));\n    setInputWaterDose(newWaterDose.toString());\n  };\n\n  useEffect(() => {\n    setInputWaterDose(waterDose.toString());\n  }, [waterDose]);\n\n  const timeOptions = () => {\n    const options = [];\n    for (let h = 0; h < 24; h++) {\n      for (let m = 0; m < 60; m += 5) {\n        const timeString = `${h.toString()}:${m.toString().padStart(2, '0')}`;\n        options.push(\n          <option key={timeString} value={timeString}>\n            {timeString}\n          </option>\n        );\n      }\n    }\n    return options;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(addWaterThunk({ waterDose, time }));\n  };\n  return (\n    <>\n      <button type=\"button\" onClick={closeModal}>\n        <Svg id={'#close'} width={24} height={24} />\n      </button>\n      <h2>Add water</h2>\n      <p>Choose a value:</p>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <p>Amount of water:</p>\n          <div>\n            <button onClick={decreaseDose} disabled={waterDose === 0}>\n              -\n            </button>\n            {waterDose}ml\n            <button onClick={increaseDose}>+</button>\n          </div>\n        </div>\n        <div>\n          <p>Recording time:</p>\n          <div>\n            <select value={time} onChange={handleTime}>\n              {timeOptions()}\n            </select>\n          </div>\n        </div>\n        <div>\n          <label>Enter the value of the water used:</label>\n          <input\n            type=\"text\"\n            value={inputWaterDose}\n            onChange={handleInputWaterDoseChange}\n            onBlur={handleInputWaterDoseBlur}\n          />\n        </div>\n        <div>\n          <p>{waterDose}ml</p>\n          <button type=\"submit\">Save</button>\n        </div>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__xTnIT\",\"backdropIsHidden\":\"Modal_backdropIsHidden__OqhjM\",\"modalCallback\":\"Modal_modalCallback__hw-ED\"};","// import { useCallback } from 'react';\n// import { useEffect } from 'react'\n// import { useDispatch } from 'react-redux';\n// import { showModal } from 'store/modal/modalSlice';\nimport css from \"./Modal.module.css\"\n\n\nconst Modal = ({ children}) => {\n\n    // const dispatch = useDispatch()\n\n    // const handlerClick = useCallback((e) => {\n    //     if (e.code === 'Escape') dispatch(showModal());\n    //     if (e.currentTarget === e.target) dispatch(showModal());\n    // }, [dispatch])\n\n    // useEffect(() => {\n    //     window.addEventListener('keydown', handlerClick)\n\n    //     return (() => {\n    //          document.removeEventListener('keydown', handlerClick);\n    //     })\n    // }, [handlerClick])\n\n    return (\n        <div \n        className={css.backdrop + \" \" + css.backdropIsHidden} \n        // onClick={handlerClick}\n        >\n            <div\n                className={css.modalCallback}  \n                // onClick={handlerClick}\n                >\n                {children}\n            </div>\n        </div>\n    )\n}\n\n\nexport default Modal","import { AddWaterModal } from 'components/AddWaterModal/AddWaterModal';\nimport Modal from 'components/Modal/Modal';\nimport { useState } from 'react';\n\nexport const WaterProgress = () => {\n  const [showModal, setShowModal] = useState(false);\n  const handleClick = () => {\n    setShowModal(!showModal);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  return (\n    <>\n      <div>\n        <div>Today</div>\n        <div>waterRate</div>\n      </div>\n      <button onClick={() => handleClick()}>Add Water</button>\n      {showModal ? (\n        <Modal>\n          <AddWaterModal closeModal={closeModal} />\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n","// import AuthForm from 'components/AuthForm/AuthForm';\nimport { DailyNorma } from 'components/DailyNorma/DailyNorma';\n\nimport { WaterProgress } from 'components/WaterProgress/WaterProgress';\n// import { useSelector } from 'react-redux';\n// import Loader from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  // const isLoading = useSelector();\n\n  return (\n    <section>\n      <div className=\"container\">\n        {/* <AuthForm/> */}\n        <DailyNorma />\n        <WaterProgress />\n        {/* {isLoading && <Loader />} */}\n      </div>\n      \n    </section>\n  );\n};\n\nexport default HomePage;\n"],"names":["_useState","useState","_useState2","_slicedToArray","gender","setGender","_useState3","_useState4","weight","setWeight","_useState5","_useState6","time","setTime","_useState7","_useState8","waterRate","setWaterRate","handlerChange","_ref","_ref$target","target","value","name","console","log","_jsxs","action","onSubmit","children","_jsx","htmlFor","type","id","onChange","placeholder","dispatch","useDispatch","_Fragment","onClick","e","showModal","Svg","width","height","DailyNormalModalForm","showModalSelector","state","modal","DailyNorma","showDaily","useSelector","className","css","DailyNormaModal","AddWaterModal","closeModal","waterDose","setWaterDose","inputWaterDose","setInputWaterDose","now","Date","hours","String","getHours","minutes","getMinutes","padStart","concat","currentTime","useEffect","toString","event","preventDefault","addWaterThunk","prev","Math","max","disabled","options","h","m","timeString","push","timeOptions","onBlur","newWaterDose","round","Number","WaterProgress","setShowModal","Modal"],"sourceRoot":""}